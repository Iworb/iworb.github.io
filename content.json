{"pages":[{"title":"Tags","permalink":"http://iworb.github.io/tags/index.html","text":""},{"title":"About","permalink":"http://iworb.github.io/about/index.html","text":""}],"posts":[{"title":"Full Stack (Node + Express + MongoDb + Vue + Nuxt) application. Part 2: Nuxt and Expres","permalink":"http://iworb.github.io/2018/02/12/01-nemvn/","text":"Nuxt12yarn add nuxtyarn add stylus stylus-loader --dev Lets make client directory in our project. It will contain whole frontend code made with Nuxt.Also, create nuxt.config.js in the root folder to define Nuxt settings.Lets define client directory and loader color:1234module.exports = &#123; loading: &#123;color: '#3B8070'&#125;, srcDir: 'client/'&#125; Lets make a single page. Create client/pages directory and index.vue file within. Then fill this file with some test data:123456789101112131415161718192021&lt;template&gt; &lt;div&gt; Hello #&#123;&#123; counter &#125;&#125; &lt;button @click=&quot;counter = counter +1&quot;&gt;+1&lt;/button&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt; export default &#123; data () &#123; return &#123; counter: 0 &#125; &#125; &#125;&lt;/script&gt;&lt;style lang=&quot;stylus&quot;&gt; div background-color lightblue&lt;/style&gt; ExpressLets make an entry point: in the server directory create index.js.Before further work we have to install some modules:1yarn add express server/index.js:123456789101112131415161718require('module-alias/register') // Details at Part 0/Module alias const express = require('express')const app = express()const &#123;Nuxt, Builder&#125; = require('nuxt')const nuxtConfig = require('@/nuxt.config')const nuxt = new Nuxt(nuxtConfig)if (process.env.NODE_ENV !== 'production') &#123; (new Builder(nuxt)).build()&#125;app.use(nuxt.render)app.listen(3000, () =&gt; &#123; console.log(`Application was started at the 3000th port`)&#125;)exports = module.exports = app Now we should modify our package.json and set our main script to server/index.js.That’s all. Now we can run our server with yarn run and we’ll got simple page located on http://localhost:3000.This part wraps up 01-nuxt-express git branch."},{"title":"Full Stack (Node + Express + MongoDb + Vue + Nuxt) application. Part 0: Usefull stuff","permalink":"http://iworb.github.io/2018/02/12/00-nemvn/","text":"BeginTo start new project create new directory and run this commends to init node application and git:12yarn initgit init I will use yarn, but you could use npm, commands are mostly the same.To configure git lets add .gitignore file:12345678910111213141516171819202122232425262728293031################################################# Dependencies################################################node_modules################################################# Node.js / NPM################################################lib-cov*.seed*.log*.out*.pidnpm-debug.log################################################# Miscellaneous################################################*~*#.DS_STORE.netbeansnbproject.idea.node_historydump.rdb.nuxt.vscode LinterLet’s add some style check:123yarn add eslint.\\node_modules\\.bin\\eslint --inityarn install We will use Standard style guide in JSON format.Let’s expand it little bit:123456789101112131415&#123; \"env\": &#123; \"es6\": true, \"node\": true, \"mocha\": true &#125;, \"parserOptions\": &#123; \"ecmaVersion\": 8 &#125;, \"extends\": \"standard\", \"rules\": &#123; \"arrow-parens\": [\"error\", \"as-needed\"], \"linebreak-style\": [\"error\", \"unix\"] &#125;&#125; It will extend our environment, set ECMA Script version to 8th and define some rules. Module aliasWorking with relative path is kidna hard, so lets make it easier:1yarn add module-alias Now we can define aliases which will makes relative paths looks like absolute one.In the package.json we could add new section _moduleAliases and define some paths:123&quot;_moduleAliases&quot;: &#123; &quot;@&quot;: &quot;.&quot;&#125; @ - root path Cross env variablesTo define node environment variables in package.json you could send it before running node by itself, but in the windows it won’t work, so let’s fix that:1yarn add cross-env Now ce can add some scripts:12&quot;start&quot;: &quot;cross-env ENV=production node server/index.js&quot;,&quot;dev&quot;: &quot;node server/index.js&quot;"}]}